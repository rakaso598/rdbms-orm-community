// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  username          String    @unique
  encryptedPassword String
  posts             Post[]
  comments          Comment[]
  likes             Like[]
}

model Board {
  name  String @id
  label String @unique
  posts Post[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String    @default("")
  content   String    @default("")
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  board     Board     @relation(fields: [boardName], references: [name])
  boardName String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @default("")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())

  @@unique([postId, userId])
}

// @@unique([postId, userId]) 두갤 묶어서 유니크하게 설정
